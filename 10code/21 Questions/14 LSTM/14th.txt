import numpy as np
from tensorflow.keras.datasets import boston_housing
from sklearn.preprocessing import MinMaxScaler
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import LSTM, Dense

# Load Boston housing data
(X_train, y_train), (X_test, y_test) = boston_housing.load_data()

# Normalize
scaler_x = MinMaxScaler()
scaler_y = MinMaxScaler()
X_train_scaled = scaler_x.fit_transform(X_train)
y_train_scaled = scaler_y.fit_transform(y_train.reshape(-1, 1))

# Use only first few features (e.g., 2 features) and reshape for LSTM
X = X_train_scaled[:, :2]  # Using only 2 features for simplicity
X_seq = []
y_seq = []
for i in range(len(X) - 1):
    X_seq.append(X[i:i+1])
    y_seq.append(y_train_scaled[i+1])

X_seq = np.array(X_seq)
y_seq = np.array(y_seq)

# LSTM model
model = Sequential([
    LSTM(32, input_shape=(1, 2)),
    Dense(1)
])
model.compile(optimizer='adam', loss='mse')
model.fit(X_seq, y_seq, epochs=50, verbose=0)

# Predict next
next_input = X[-1].reshape(1, 1, 2)
pred = model.predict(next_input)
print("Predicted next price:", scaler_y.inverse_transform(pred)[0][0])